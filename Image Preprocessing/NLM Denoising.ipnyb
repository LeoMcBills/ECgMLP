from skimage.restoration import denoise_nl_means, estimate_sigma
from skimage.util import img_as_float, img_as_ubyte

# Convert to float for skimage processing
input_image_float = img_as_float(input_image)

# Estimate noise standard deviation
sigma_est = np.mean(estimate_sigma(input_image_float, multichannel=False))

# Apply Non-Local Means Denoising
patch_size = 7
patch_distance = 11
h = 0.8 * sigma_est  # Strength of filtering

nlm_denoised_image = denoise_nl_means(
    input_image_float,
    h=h,
    patch_size=patch_size,
    patch_distance=patch_distance,
    multichannel=False
)

# Convert back to uint8
nlm_denoised_image_uint8 = img_as_ubyte(nlm_denoised_image)

# Display the result
plt.figure(figsize=(10, 5))
plt.subplot(1, 2, 1)
plt.title("Original Image")
plt.imshow(input_image, cmap='gray')
plt.subplot(1, 2, 2)
plt.title("NLM Denoised Image")
plt.imshow(nlm_denoised_image_uint8, cmap='gray')
plt.show()
